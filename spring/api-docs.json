{"openapi":"3.0.1","info":{"title":"EnergyCertifier API","description":"EnergyCertifier API\n\nThis API allows the user to interact with the EnergyCertifier blockchain network. The user can register and enroll new users, create and get users, groups, devices and policies, send requests to join groups, accept requests, start policy proposal phase, send votes and proposals.\n\nThe \"username\" parameter is the Username of the transaction-caller in the blockchain network, in order to make calls, it is necessary to have a user registered and enrolled in the blockchain network.","version":"1.0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"paths":{"/api/bc/vote":{"post":{"tags":["app"],"summary":"Send a vote for a policy in a group","operationId":"vote","requestBody":{"description":"A JSON object containing the groupId, userId and policyId of the group","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","groupId":"1","userId":"1","policyId":"1"}}}}},"required":true},"responses":{"200":{"description":"Vote sent","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error sending vote","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/startPolicyProposalPhase":{"post":{"tags":["app"],"summary":"Start the policy proposal phase","operationId":"startPolicyProposalPhase","requestBody":{"description":"A JSON object containing the groupId and adminId of the group","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","groupId":"1","adminId":"1"}}}}},"required":true},"responses":{"200":{"description":"Policy proposal phase started","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error starting policy proposal phase","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/setTimer":{"post":{"tags":["app"],"summary":"Forcefully set a timer in a group","operationId":"setTimer","requestBody":{"description":"A JSON object containing the username of the caller in BC, groupId and timer","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","groupId":"1","timer":"10"}}}}},"required":true},"responses":{"500":{"description":"Error setting timer","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Timer set","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/sendProposal":{"post":{"tags":["app"],"summary":"Send a proposal for all policy of a user in a group","operationId":"sendProposal","requestBody":{"description":"A JSON object containing the groupId and userId of the group","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","groupId":"1","userId":"1"}}}}},"required":true},"responses":{"200":{"description":"Proposal sent","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error sending proposal","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/sendMeasure":{"post":{"tags":["app"],"summary":"Send a measure in a group, in order to prevent time-conflict it will try to send the measure 5 times before returning an error","operationId":"sendMeasure","requestBody":{"description":"A JSON object containing the groupId, userId, measureId, deviceId, values (The values of the measure), valueNames (The names of the values)","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","groupId":"1","userId":"1","measureId":"1","deviceId":"1","values":["10","20"],"valueNames":["Value1","Value2"]}}}}},"required":true},"responses":{"200":{"description":"Measure sent","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error sending measure","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/registerbc":{"post":{"tags":["app"],"summary":"Register a new user in the blockchain","operationId":"registerUserInBC","requestBody":{"description":"A JSON object containing the ID of the user","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"ID":"1"}}}}},"required":true},"responses":{"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error registering user","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"User registered","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/registerDevice":{"post":{"tags":["app"],"summary":"Create a new device in the blockchain","operationId":"registerDevice","requestBody":{"description":"A JSON object containing the ID, unit and userId of the device","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","ID":"1","unit":"Unit1","userId":"1"}}}}},"required":true},"responses":{"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Device registered","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error registering device","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/joinGroup":{"post":{"tags":["app"],"summary":"Send a request to join a group","operationId":"joinGroup","requestBody":{"description":"A JSON object containing the groupId and userId of the group","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","groupId":"1","userId":"1"}}}}},"required":true},"responses":{"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error sending request","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Request sent","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/enrollbc":{"post":{"tags":["app"],"summary":"Enroll a user in the blockchain","operationId":"enrollUserInBC","requestBody":{"description":"A JSON object containing the ID of the user","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"ID":"1"}}}}},"required":true},"responses":{"500":{"description":"Error enrolling user","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"User enrolled","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/createUser":{"post":{"tags":["app"],"summary":"Create a new user in the blockchain","operationId":"createUser","requestBody":{"description":"A JSON object containing the userId, name, surname and email of the user","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","userId":"1","name":"John","surname":"Doe","email":"jdoe@gmail.com"}}}}},"required":true},"responses":{"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error creating user","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"User created","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/createPolicy":{"post":{"tags":["app"],"summary":"Create a new policy in the blockchain","operationId":"createPolicy","requestBody":{"description":"A JSON object containing the userId, ID, samplingInterval (Allowed seconds between measures), policyType (TIME, VALUE or TIMEVALUE), valueNames (List of values to be measured, in this case their names), valueThresholds and (List of values to be measured, in this case their thresholds), operatorThresholds (List of operators to be used in the comparison: <, >, <=, >=, ==, >=<)","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","userId":"1","ID":"1","samplingInterval":"10","policyType":"TIME","valueNames":["Value1","Value2"],"valueThresholds":["10","20"],"operatorThresholds":[">","<"]}}}}},"required":true},"responses":{"500":{"description":"Error creating policy","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Policy created","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/createGroup":{"post":{"tags":["app"],"summary":"Create a new group in the blockchain","operationId":"createGroup","requestBody":{"description":"A JSON object containing the groupId, name, location and user of the group","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","ID":"1","name":"Group1","location":"Location1","user":"1"}}}}},"required":true},"responses":{"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Group created","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error creating group","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/acceptRequest":{"post":{"tags":["app"],"summary":"Accept a request to join a group","operationId":"acceptRequest","requestBody":{"description":"A JSON object containing the groupId, userId and adminId of the group","content":{"application/json":{"schema":{"type":"object"},"examples":{"example":{"description":"example","value":{"username":"1","groupId":"1","userId":"1","adminId":"1"}}}}},"required":true},"responses":{"200":{"description":"Request accepted","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Malformed JSON","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error accepting request","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/userExists":{"get":{"tags":["app"],"summary":"Check if a user exists in the blockchain","operationId":"userExists","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"userId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"User exists","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"User not found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/policyExists":{"get":{"tags":["app"],"summary":"Check if a policy exists in the blockchain","operationId":"policyExists","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"policyId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Policy not found","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Policy exists","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/groupExists":{"get":{"tags":["app"],"summary":"Check if a group exists in the blockchain","operationId":"groupExists","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Group not found","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Group exists","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getViolationsInGroup":{"get":{"tags":["app"],"summary":"Get all the violations in a group","operationId":"getViolationsInGroup","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Violations found","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"Violations not found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getViolation":{"get":{"tags":["app"],"summary":"Get violations in a group from the blockchain","operationId":"getViolation","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Violation not found","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Violation found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getUser":{"get":{"tags":["app"],"summary":"Get a user from the blockchain","operationId":"getUser","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"userId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"User found","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"User not found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getTimestampsSpring":{"get":{"tags":["app"],"summary":"Get the timestamps of the measures saved in Spring","operationId":"getTimestampsSpring","responses":{"200":{"description":"String of timestamps found","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/bc/getPolicy":{"get":{"tags":["app"],"summary":"Get a policy from the blockchain","operationId":"getPolicy","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"policyId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Policy found","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"Policy not found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getMeasure":{"get":{"tags":["app"],"summary":"Get a measure from the blockchain","operationId":"getMeasure","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"measureId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Measure not found","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Measure found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getGroup":{"get":{"tags":["app"],"summary":"Get a group from the blockchain","operationId":"getGroup","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Group not found","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Group found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getAll":{"get":{"tags":["app"],"summary":"Get all the elements in the blockchain","operationId":"getAll","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"500":{"description":"Error getting all elements","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"All elements given","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getAllViolations":{"get":{"tags":["app"],"summary":"Get all the violations in the blockchain","operationId":"getAllViolations","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"All violations given","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error getting all violations","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getAllUsers":{"get":{"tags":["app"],"summary":"Get all the users in the blockchain","operationId":"getAllUsers","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"500":{"description":"Error getting all users","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"All users given","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getAllMeasures":{"get":{"tags":["app"],"summary":"Get all the measures in the blockchain","operationId":"getAllMeasures","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"500":{"description":"Error getting all measures","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"All measures given","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/getAllGroups":{"get":{"tags":["app"],"summary":"Get all the groups in the blockchain","operationId":"getAllGroups","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"All groups given","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error getting all groups","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/deviceExists":{"get":{"tags":["app"],"summary":"Check if a device exists in the blockchain","operationId":"deviceExists","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"deviceId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device exists","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"Device not found","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/bc/resetGroup":{"delete":{"tags":["app"],"summary":"Reset a group in the blockchain","operationId":"resetGroup","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Group reset","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Error resetting group","content":{"*/*":{"schema":{"type":"object"}}}}}}}},"components":{}}